---
// Fixed Navbar.astro - Fully responsive and working
---

<nav
  id="navbar"
  class="fixed top-0 left-0 right-0 z-50 w-full transition-all duration-300 ease-in-out"
>
  <div class="max-w-screen-2xl flex flex-wrap items-center justify-between mx-auto p-4 lg:px-10">
    <!-- Logo/Brand -->
    <a href="/" class="flex items-center space-x-4">
      <div class="flex items-center">
        <span class="text-xl font-bold">The Vaasthu Company</span>
      </div>
    </a>

    <!-- Mobile menu button -->
    <button 
      id="mobile-menu-button" 
      type="button" 
      class="xl:hidden p-2 rounded-lg hover:bg-gray-100 hover:bg-opacity-20 focus:outline-none focus:ring-2 focus:ring-gray-200 transition-colors"
      aria-controls="navbar-default"
      aria-expanded="false"
    >
      <span class="sr-only">Open main menu</span>
      <!-- Hamburger Icon -->
      <div class="w-6 h-6 flex flex-col justify-center items-center">
        <span class="hamburger-line bg-current h-0.5 w-6 rounded-full transition-all duration-300 origin-center"></span>
        <span class="hamburger-line bg-current h-0.5 w-6 rounded-full transition-all duration-300 origin-center my-1"></span>
        <span class="hamburger-line bg-current h-0.5 w-6 rounded-full transition-all duration-300 origin-center"></span>
      </div>
    </button>

    <!-- Navigation menu -->
    <div id="navbar-default" class="navbar-menu hidden w-full xl:block xl:w-auto">
      <ul class="font-medium flex flex-col xl:flex-row xl:space-x-8 text-sm mt-4 xl:mt-0 bg-white xl:bg-transparent rounded-lg xl:rounded-none shadow-lg xl:shadow-none p-4 xl:p-0 border xl:border-none">
        <li>
          <a 
            href="/services" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            Our Services
          </a>
        </li>
        <li>
          <a 
            href="/about" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            About Us
          </a>
        </li>
        <li>
          <a 
            href="/engagement" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            Mode of Engagement
          </a>
        </li>
        <li>
          <a 
            href="/vastu-tips" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            Vastu Tips + Projects
          </a>
        </li>
        <li>
          <a 
            href="/testimonials" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            Testimonials
          </a>
        </li>
        <li>
          <a 
            href="/properties" 
            class="nav-link block py-2 px-3 font-semibold hover:text-green-600 transition-colors duration-200 rounded xl:rounded-none hover:bg-gray-50 xl:hover:bg-transparent"
          >
            Vastu-Corrected Properties
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navbar = document.getElementById("navbar");
    const mobileBtn = document.getElementById("mobile-menu-button");
    const menu = document.getElementById("navbar-default");
    const hamburgerLines = document.querySelectorAll(".hamburger-line");

    // Mobile menu toggle with hamburger animation
    mobileBtn?.addEventListener("click", (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const isHidden = menu?.classList.contains("hidden");
      
      // Toggle menu visibility
      menu?.classList.toggle("hidden");
      
      // Animate hamburger to X
      hamburgerLines.forEach((line, index) => {
        const el = line as HTMLElement;
        if (isHidden) {
          // Transform to X
          if (index === 0) {
            el.style.transform = "rotate(45deg) translate(6px, 6px)";
          } else if (index === 1) {
            el.style.opacity = "0";
          } else if (index === 2) {
            el.style.transform = "rotate(-45deg) translate(6px, -6px)";
          }
        } else {
          // Transform back to hamburger
          if (index === 0) {
            el.style.transform = "rotate(0) translate(0, 0)";
          } else if (index === 1) {
            el.style.opacity = "1";
          } else if (index === 2) {
            el.style.transform = "rotate(0) translate(0, 0)";
          }
        }
      }); // <-- Add this closing brace for forEach

      // Update aria-expanded for accessibility
      mobileBtn.setAttribute("aria-expanded", isHidden ? "true" : "false");

    // Close mobile menu when clicking on a link
    const navLinks = menu?.querySelectorAll(".nav-link");
    navLinks?.forEach(link => {
      link.addEventListener("click", () => {
        if (window.innerWidth < 1280) { // xl breakpoint
          menu?.classList.add("hidden");
          mobileBtn?.setAttribute("aria-expanded", "false");
          
          hamburgerLines.forEach((line, index) => {
            const el = line as HTMLElement;
            if (index === 0) {
              el.style.transform = "rotate(0) translate(0, 0)";
            } else if (index === 1) {
              el.style.opacity = "1";
            } else if (index === 2) {
              el.style.transform = "rotate(0) translate(0, 0)";
            }
          });
        }
      });
    });

    // Close mobile menu when clicking outside
    document.addEventListener("click", (e) => {
      if (window.innerWidth < 1280) {
        const isClickInsideNav = navbar?.contains(e.target as Node);
        if (!isClickInsideNav && !menu?.classList.contains("hidden")) {
          menu?.classList.add("hidden");
          mobileBtn?.setAttribute("aria-expanded", "false");
          
          // Reset hamburger animation
          hamburgerLines.forEach((line, index) => {
            if (index === 0) {
              (line as HTMLElement).style.transform = "rotate(0) translate(0, 0)";
            } else if (index === 1) {
              (line as HTMLElement).style.opacity = "1";
            } else if (index === 2) {
              (line as HTMLElement).style.transform = "rotate(0) translate(0, 0)";
            }
          });
        }
      }
    });

    // Navbar scroll behavior
    function updateNavbar() {
      if (!navbar) return;
      
      const atTop = window.scrollY <= 50;
      const isHomePage = window.location.pathname === "/";

      // Remove all classes first
      navbar.classList.remove(
        "bg-transparent", 
        "text-white", 
        "bg-white", 
        "text-black", 
        "shadow-md"
      );

      if (atTop && isHomePage) {
        // Transparent navbar at top of home page
        navbar.classList.add("bg-transparent", "text-white");
      } else {
        // White navbar with shadow when scrolled or on other pages
        navbar.classList.add("bg-white", "text-black", "shadow-md");
      }
    }

    // Initial navbar setup
    updateNavbar();

    // Update navbar on scroll with throttling
    let ticking = false;
    window.addEventListener("scroll", () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateNavbar();
          ticking = false;
        });
        ticking = true;
      }
    });

    // Handle window resize
    window.addEventListener("resize", () => {
      if (window.innerWidth >= 1280) { // xl breakpoint
        menu?.classList.remove("hidden");
        mobileBtn?.setAttribute("aria-expanded", "false");
        
        // Reset hamburger animation on desktop
        hamburgerLines.forEach((line, index) => {
          if (index === 0) {
            (line as HTMLElement).style.transform = "rotate(0) translate(0, 0)";
          } else if (index === 1) {
            (line as HTMLElement).style.opacity = "1";
          } else if (index === 2) {
            (line as HTMLElement).style.transform = "rotate(0) translate(0, 0)";
          }
        });
      } else {
        menu?.classList.add("hidden");
      }
    });
  });
})
</script>

<style>
  /* Navbar base styles */
  #navbar {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }
  
  #navbar.bg-transparent {
    background-color: rgba(0, 0, 0, 0.1);
  }
  
  #navbar.bg-white {
    background-color: rgba(255, 255, 255, 0.95);
  }
  
  /* Mobile menu positioning and animation */
  @media (max-width: 1279px) {
    .navbar-menu {
      position: absolute;
      top: 100%;
      left: 1rem;
      right: 1rem;
      margin-top: 0.5rem;
      transform-origin: top;
      animation: slideDown 0.3s ease-out;
    }
    
    .navbar-menu.hidden {
      animation: slideUp 0.2s ease-in;
    }
    
    /* Ensure mobile menu appears above other content */
    .navbar-menu ul {
      background-color: white !important;
      color: black !important;
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    
    .navbar-menu .nav-link {
      color: black !important;
    }
    
    .navbar-menu .nav-link:hover {
      color: #16a34a !important;
      background-color: #f9fafb !important;
    }
  }
  
  /* Desktop menu styles */
  @media (min-width: 1280px) {
    .navbar-menu {
      display: block !important;
    }
  }
  
  /* Animations */
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px) scaleY(0.8);
    }
    to {
      opacity: 1;
      transform: translateY(0) scaleY(1);
    }
  }
  
  @keyframes slideUp {
    from {
      opacity: 1;
      transform: translateY(0) scaleY(1);
    }
    to {
      opacity: 0;
      transform: translateY(-10px) scaleY(0.8);
    }
  }
  
  /* Hamburger animation styles */
  .hamburger-line {
    transform-origin: center;
  }
  
  /* Active page indicator */
  .nav-link-active {
    color: #16a34a !important;
    font-weight: 600;
  }
  
  @media (min-width: 1280px) {
    .nav-link-active::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 50%;
      transform: translateX(-50%);
      width: 20px;
      height: 2px;
      background-color: #16a34a;
      border-radius: 1px;
    }
  }
</style>